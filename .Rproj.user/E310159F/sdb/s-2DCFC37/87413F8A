{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Vignette for Library 'safetydata'\"\nauthor: \"Pericles\"\ndate: \"`r Sys.Date()`\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{Vignette for Library 'safetydata'}\n  %\\VignetteEngine{knitr::rmarkdown}\n  %\\VignetteEncoding{UTF-8}\n---\n\n## Introduction\n\n> \"It's not the fall that kills you, it's the sudden stop.\"\n(Douglas Adams)\n\nData analysis is a growing field within aviation safety. The United States' civil aviation authority, the Federal Aviation Administration,\nrequires large commercial operators to develop and operate a Safety Management System as outlined in [14 CFR ยง5](https://www.ecfr.gov/cgi-bin/text-idx?SID=31a1ff34c5fb23bfab62b105fa038ceb&mc=true&node=pt14.1.5&rgn=div5) and has issued guidance\non how to comply with the regulation through [Advisory Circular 120-92](https://www.faa.gov/regulations_policies/advisory_circulars/index.cfm/go/document.information/documentID/1026670).\nIn both the regulation and the Advisory Circular, data management is mentioned several times, but data analysis techniques and best\npractices are still a work in progress. The 'safetydata' library is a R package to help aviation safety data analysts perform common tasks.\n\n## Datasets\n\nThe following datasets are currently available:\n\n- **AirportCodes_20170404** contains ICAO and IATA codes for various airports\n\n- **AirportTimezones_20170404** contains timezones for various airports\n\n- **NTSBData_20170328** is a copy of the NTSB accidents and incidents database created with the **downloadNTSBdf** function\n\n- **USA_DaylightSavings_20170404** is a dataframe with USA daylight savings adjustments for the decade starting 2010\n\n## Functions\n\nThe following functions are currently available:\n\n- **densityAltitude** is a function that calculates density altitude using the National Weather Service method and data points\nthat are commonly available to pilots and airlines.\n\n- **downloadNTSBdf** is a function that downloads the NTSB accidents and incidents database as a R data.frame. This function\ncan take some time to run, so the **NTSBData_20170328** dataset is available as pre-downloaded static copy.\n\n- **qq_abline_intersect** and **qq_abline_slope** are helpful when checking for the normality of data. They are intended to\nbe used with [ggplot2](http://ggplot2.tidyverse.org/).\n\n- **EAS_to_TAS** and **TAS_to_GS** are functions used to convert between common aircraft speeds.\n\n- **spcChart** is a function that plots np-charts or p-charts using calculations from the qcc library and graphics from\nthe [ggplot2](http://ggplot2.tidyverse.org/) library.\n\n- **windVectors_crosswind** and **windVectors_headwind** are functions used to extract the longitudinal and transverse vectors\nof wind relative to an aircraft.\n\n- **rare_events** is a function used to determine rare events that require validation in EMS\n\n- **rare_events_metadata** is a function used to create a db file referenced in rare_events function\n\n## Examples\n\nCombine several functions to determine ground speed from raw aircraft data.\n\n```{r}\nlibrary(safetydata)\n\nheading <- 048 # aircraft true heading in bearing degrees\nwind_from <- 290 # wind direction (from) in bearing degrees\nwind_speed <- 12 # wind speed in knots\ntemperature <- 26 # outside air temperature in degrees Celcius\ndewpoint <- 10 # dewpoint in degrees Celcius\naltimeter <- 29.90 # altimeter in inches of mercury\nairspeed <- 280 # airspeed in equivalent airspeed knots\n\n# Calculate true airspeed\nTAS <- EAS_to_TAS(airspeed, altimeter, temperature)\n\n# Calculate headwind\nheadwind <- windVectors_headwind(heading, wind_from, wind_speed)\n\n# Calculate ground speed\nGS <- TAS_to_GS(TAS, headwind)\n\n# Print results\nTAS\nheadwind\nGS\n\n```\n\nCreate statistical process control p- and np-charts. Note that this function is currently built to work with .CSV files since\ndata is commonly extracted from other systems. The function expects cretain specific formatting in the .CSV file and\ncan be quite picky.\n\n```{r, fig.width = 8, fig.asp = .8}\nlibrary(safetydata)\nlibrary(tidyverse)\nlibrary(nycflights13)\nset.seed(78345)\n\n# Create a .CSV file with formatting appropriate for this function\nflights %>%\n  group_by(month) %>%\n  summarise(Operations = n()) %>%\n  ungroup() %>%\n  mutate(Deficiencies = rnorm(12, mean = 20, sd = 5)) %>% # Note: The \"deficiencies\" for this are pseudo-randomly created\n  mutate(month = month.abb[month]) %>%\n  mutate(Date = paste(month, 2013, sep = \", \")) %>%\n  select(Date,\n         Deficiencies,\n         Operations) %>%\n  write_csv(path = paste(getwd(), \"example.csv\", sep = \"/\"))\n\n# np-chart\nspcChart(\"example.csv\", title = \"np-Chart\", type = \"np\", startdate = as.Date(\"2013-01-01\"), enddate = as.Date(\"2013-12-31\"))\n\n# p-chart\nspcChart(\"example.csv\", title = \"p-Chart\", type = \"p\", startdate = as.Date(\"2013-01-01\"), enddate = as.Date(\"2013-12-31\"))\n```\n\nPlot actual vs. theoretical normal distribution quantiles to check for normality of data. In the example below, the sample does not come from a normally distributed dataset.\n\n```{r, fig.width = 8, fig.asp = .8}\nlibrary(safetydata)\nlibrary(tidyverse)\nlibrary(nycflights13)\nset.seed(78345)\n\n# Use density plot or histogram to review the data visually\nflights %>%\n  ggplot(mapping = aes(x = arr_delay)) + geom_density()\n\n# Use the Q_Q plot to support conclusions from the distribution plot\ndata <- flights %>%\n  select(arr_delay) %>%\n  sample_n(5000) %>%\n  unlist()\n\nggplot(data = NULL, mapping = aes(sample = data)) + \n  geom_qq() + \n  geom_abline(slope = qq_abline_slope(data), intercept = qq_abline_intersect(data))\n\n# Back up Q-Q plot with a Shapiro-Wilk test\nflights %>%\n  select(arr_delay) %>%\n  sample_n(5000) %>%\n  unlist() %>%\n  shapiro.test()\n```\n",
    "created" : 1515169070424.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1156181302",
    "id" : "87413F8A",
    "lastKnownWriteTime" : 1515169200,
    "last_content_update" : 1515169200487,
    "path" : "~/GitHub/safetydata/vignettes/safetydata_vignette.Rmd",
    "project_path" : "vignettes/safetydata_vignette.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}